Program 1 – Write a Ansible Adhoc Commands to create a group called “deploy
[root@node1 ~]# ansible localhost -m group -a "name=deploy state=present"
localhost | CHANGED => {
    "changed": true,
    "gid": 1002,
    "name": "deploy",
    "state": "present",
    "system": false
}

Write a Ansible Adhoc Commands to create a user called “deploy-user” which is part of group called “deploy” and with /bin/bash shell.
[root@node1 ~]# ansible localhost -m user -a "name=deploy-user group=deploy shell=/bin/bash"
localhost | CHANGED => {
    "changed": true,
    "comment": "",
    "create_home": true,
    "group": 1002,
    "home": "/home/deploy-user",
    "name": "deploy-user",
    "shell": "/bin/bash",
    "state": "present",
    "system": false,
    "uid": 1001
}

[root@node1 ~]# more /etc/passwd | grep deploy-user
deploy-user:x:1001:1002::/home/deploy-user:/bin/bash

Program 3 – Write a Ansible Adhoc commands install package named “httpd” in RHEL/centos.

[root@node1 ~]# ansible localhost -m yum -a "name=httpd state=present"
[root@node1 ~]# which httpd
/sbin/httpd

Program 4 – Write a Ansible Adhoc commands to start and enable the service named “httpd”

[root@node1 ~]# ansible localhost -m service -a "name=httpd state=started"

Program 5 – Write a Ansible commands to create a file called “index.html” in /var/www/html with some dummy html contents.

[root@node1 ~]# ansible localhost -m file -a "name=index.html state=touch"
localhost | CHANGED => {
    "changed": true,
    "dest": "index.html",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "secontext": "unconfined_u:object_r:admin_home_t:s0",
    "size": 0,
    "state": "file",
    "uid": 0
}

[root@node1 ~]# ansible localhost -m copy -a "src=index.html dest=/var/www/html"
localhost | SUCCESS => {
    "changed": false,
    "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
    "dest": "/var/www/html/index.html",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "path": "/var/www/html/index.html",
    "secontext": "system_u:object_r:httpd_sys_content_t:s0",
    "size": 0,
    "state": "file",
    "uid": 0
}

Program 6 – Write a Ansible commands to copy a file called “second.html” in /var/www/html/second.html with some dummy html contents.

[root@node1 ~]# ansible localhost -m file -a "name=second.html state=touch"
localhost | CHANGED => {
    "changed": true,
    "dest": "second.html",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "secontext": "unconfined_u:object_r:admin_home_t:s0",
    "size": 0,
    "state": "file",
    "uid": 0
}

[root@node1 ~]# ansible localhost -m copy -a "src=second.html dest=/var/www/html"
localhost | CHANGED => {
    "changed": true,
    "checksum": "e5118d890d4227dc30fe3db852f7cec4f5aa5ff0",
    "dest": "/var/www/html/second.html",
    "gid": 0,
    "group": "root",
    "md5sum": "c6cfc67369e3ef0ace5ff5f76965b617",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:httpd_sys_content_t:s0",
    "size": 14,
    "src": "/root/.ansible/tmp/ansible-tmp-1574762454.05-204127173243726/source",
    "state": "file",
    "uid": 0
}

Program 7 – Write a Ansible commands to install a package called “git”, “wget”.

[root@node1 ~]# ansible localhost -m package -a "name=git,wget state=present"
localhost | SUCCESS => {
    "changed": false,
    "msg": "",
    "rc": 0,
    "results": [
        "git-1.8.3.1-20.el7.x86_64 providing git is already installed",
        "wget-1.14-18.el7_6.1.x86_64 providing wget is already installed"
    ]
}


[root@node1 ~]# ansible localhost -m git -a "repo=https://github.com/scmgalaxy/ansible-role-template dest=/home/vagrant/newrepo"
localhost | CHANGED => {
    "after": "d3eefe03c1bb6c9b0e1574347523174a26d015ff",
    "before": null,
    "changed": true
}

Program 9 – Write a Ansible commands to reboot a self machine.

